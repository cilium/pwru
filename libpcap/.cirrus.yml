# The internal git client reads CIRRUS_CLONE_DEPTH.
env:
  CIRRUS_CLONE_DEPTH: 3

freebsd_task:
  name: freebsd-amd64
  only_if: $CIRRUS_BRANCH != 'coverity_scan'
  freebsd_instance:
    matrix:
      - image_family: freebsd-12-3
        cpu: 2
        memory: 2G
      - image_family: freebsd-13-1
        cpu: 4
        memory: 4G
  env:
    IGNORE_OSVERSION: yes
    MAKEFLAGS: -j 4
    MATRIX_CC: clang14 gcc12
  script:
    - pkg install -qy autoconf gcc12 llvm14
    - pkg install -qy cmake git-tiny # for build_matrix.sh and build.sh
    - ./build_matrix.sh

linux_task:
  name: linux-amd64
  only_if: $CIRRUS_BRANCH != 'coverity_scan'
  container:
    image: ubuntu:22.04
    cpu: 2
    memory: 1G
  env:
    DEBIAN_FRONTEND: noninteractive
    MAKEFLAGS: -j 3
  script:
    - apt-get -qy update >/dev/null
    - apt-get -qy install libdbus-1-dev libbluetooth-dev libnl-genl-3-dev libibverbs-dev libssl-dev >/dev/null
    - apt-get -qy install flex bison autoconf make clang gcc valgrind >/dev/null
    - apt-get -qy install cmake git bc >/dev/null # for build_matrix.sh and build.sh
    - apt list --installed 'lib*-dev'
    - ./build_matrix.sh

macos_task:
  name: macos-aarch64
  only_if: $CIRRUS_BRANCH != 'coverity_scan'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.1 # macOS 13 with Xcode 14.1
  env:
    MAKEFLAGS: '-j 4' # macOS VMs run on 4 cores
  script:
    - brew update >/dev/null
    - brew install openssl@3
    - ./build_matrix.sh

#
# Just testing for now.
#
windows_task:
  name: windows-amd64
  only_if: $CIRRUS_BRANCH != 'coverity_scan'
  windows_container:
    image: cirrusci/windowsservercore:2019
  script:
    - set/?

coverity_task:
  name: Coverity Scan
  only_if: $CIRRUS_BRANCH == 'coverity_scan'
  container:
    image: ubuntu:22.04
    cpu: 2
    memory: 2G
  env:
    DEBIAN_FRONTEND: noninteractive
    MAKEFLAGS: -j 3
    COVERITY_SCAN_PROJECT_NAME: $CIRRUS_REPO_FULL_NAME
    COVERITY_SCAN_TOKEN: ENCRYPTED[58bfbfcf624e5b7b85fb9df95dd0b3f9f93642824e6ae94616e4d345af4848580932a6ece02337fee112194b29ce6593]
    COVERITY_SCAN_BUILD_COMMAND_PREPEND: ./configure --enable-remote
    COVERITY_SCAN_BUILD_COMMAND: make
  script:
    - apt-get -qy update >/dev/null
    - apt-get -qy install libdbus-1-dev libbluetooth-dev libnl-genl-3-dev libibverbs-dev >/dev/null
    - apt-get -qy install flex bison autoconf make gcc >/dev/null
    - apt-get -qy install git curl wget ruby rubygems ruby-json >/dev/null # for the coverity script
    - apt list --installed 'lib*-dev'
    - ./.ci-coverity-scan-build.sh
